import pandas as pd # type: ignore
import matplotlib.pyplot as plt # type: ignore
import seaborn as sns # type: ignore

# Load the dataset (Make sure this path is correct)
try:
    df = pd.read_csv('Iris.csv')
    print("Dataset loaded successfully!")
except FileNotFoundError:
    print("File not found. Please check the file path.")

# Clean the dataset (If you haven't done this earlier, do it now)
# Strip spaces from column names if any
df.columns = df.columns.str.strip()

# Fill missing values in numeric columns with the mean of those columns
numeric_columns = df.select_dtypes(include=['float64', 'int64']).columns
df[numeric_columns] = df[numeric_columns].fillna(df[numeric_columns].mean())

# Handle missing values in 'species' (or equivalent categorical column)
if 'species' in df.columns:
    df['species'] = df['species'].fillna(df['species'].mode()[0])  # Fill missing values in 'species' with the mode
else:
    print("No column named 'species' found in the dataset. Please check the column name.")

# Create a cleaned version of the DataFrame
df_cleaned = df.copy()

# Create an 'index' column to simulate a time-series (or just use the index if needed)
df_cleaned['index'] = df_cleaned.index

# Now we can move to visualizing the data

# 1. Line Plot (Trend over time)
plt.figure(figsize=(10, 6))
sns.lineplot(data=df_cleaned, x='index', y='sepal_length')  # Assuming 'sepal_length' is a column
plt.title('Trend of Sepal Length Over Time')
plt.xlabel('Index')
plt.ylabel('Sepal Length')
plt.show()

# 2. Bar Chart (Comparison across categories)
plt.figure(figsize=(10, 6))
sns.barplot(data=df_cleaned, x='species', y='sepal_length')
plt.title('Average Sepal Length per Species')
plt.xlabel('Species')
plt.ylabel('Average Sepal Length')
plt.show()

# 3. Histogram (Distribution of a numerical column)
plt.figure(figsize=(10, 6))
sns.histplot(df_cleaned['sepal_length'], bins=20, kde=True)
plt.title('Distribution of Sepal Length')
plt.xlabel('Sepal Length')
plt.ylabel('Frequency')
plt.show()

# 4. Scatter Plot (Relationship between two numerical columns)
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df_cleaned, x='sepal_length', y='petal_length', hue='species')
plt.title('Sepal Length vs Petal Length')
plt.xlabel('Sepal Length')
plt.ylabel('Petal Length')
plt.legend(title='Species')
plt.show()

